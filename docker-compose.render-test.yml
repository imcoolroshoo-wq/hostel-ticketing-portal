version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hostel_postgres_render_test
    environment:
      POSTGRES_DB: hostel_ticketing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_render_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.render
    container_name: hostel_backend_render_test
    environment:
      # Simulate Render environment variables (Render provides this format)
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/hostel_ticketing
      SPRING_PROFILES_ACTIVE: render
      PORT: 10000
      JWT_SECRET: test-jwt-secret-for-render-testing-environment
      CORS_ALLOW_ALL_ORIGINS: "true"
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_render_test_data:
