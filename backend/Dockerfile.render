# Multi-stage build for Render deployment
FROM eclipse-temurin:17-jdk-alpine as build

# Set working directory
WORKDIR /app

# Install Maven
RUN apk add --no-cache maven

# Copy pom.xml first for better caching
COPY pom.xml ./

# Download dependencies
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN mvn clean package -DskipTests -Dspring.profiles.active=render

# Runtime stage
FROM eclipse-temurin:17-jre-alpine

# Set working directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -S appuser -u 1001 -G appgroup

# Install PostgreSQL client for database operations
RUN apk add --no-cache postgresql-client

# Copy the built JAR file from the build stage
COPY --from=build /app/target/*.jar app.jar

# Copy database initialization
COPY railway-init.sql /app/railway-init.sql

# Create uploads directory
RUN mkdir -p /tmp/uploads

# Expose port
EXPOSE 8080

# Set JVM options for Render
ENV JAVA_OPTS="-Xmx400m -Xms200m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# Run the application directly
CMD ["sh", "-c", "java $JAVA_OPTS -Dspring.profiles.active=render -jar app.jar"]
