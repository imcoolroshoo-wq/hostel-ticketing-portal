# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

spring:
  # Application Configuration
  application:
    name: hostel-ticketing-portal
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://postgres:5432/hostel_ticketing
    username: hostel_user
    password: hostel_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        generate_statistics: false
        types:
          print_banner: false
        jdbc:
          time_zone: UTC
        
  # Redis Configuration
  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Mail Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    com.hostel: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot.autoconfigure: DEBUG
    org.springframework.context: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  expiration: 86400000 # 24 hours

# File Upload Configuration
file:
  upload:
    dir: uploads/
    max-size: 10MB

# Cache Configuration
cache:
  redis:
    time-to-live: 3600 # 1 hour 