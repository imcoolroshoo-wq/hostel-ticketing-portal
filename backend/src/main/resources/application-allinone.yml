# All-in-One Container Configuration
server:
  port: 8080
  servlet:
    context-path: /api

spring:
  # Application Configuration
  application:
    name: hostel-ticketing-portal
  
  # Database Configuration - Local PostgreSQL in same container
  datasource:
    url: jdbc:postgresql://localhost:5432/hostel_ticketing
    username: hostel_user
    password: hostel_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        generate_statistics: false
        types:
          print_banner: false
        jdbc:
          time_zone: UTC
    defer-datasource-initialization: true
  
  # SQL initialization
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    com.hostel: INFO
    org.springframework.web: WARN
    org.springframework.boot.autoconfigure: WARN
    org.springframework.context: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# JWT Configuration
jwt:
  secret: hostel-ticketing-all-in-one-super-secure-secret
  expiration: 86400000 # 24 hours

# File Upload Configuration
file:
  upload:
    dir: /app/uploads/
    max-size: 10MB

# CORS Configuration
cors:
  allowed-origins: http://localhost,http://localhost:80
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
